// -------------------------------------------------------------------
/// \file   EcalPid.cxx
/// \brief
///
/// \author  <justo.martin-albo@physics.ox.ac.uk>
/// \date    Creation: 21 Feb 2017
// -------------------------------------------------------------------

#include "EcalPid.h"

#include <TH1F.h>



EcalPid::EcalPid()
{
  LLR_MIP_EM_muon_ = new TH1F("LLR_MIP_EM_muon", "", 60, -60, 60);
  auto v_LLR_MIP_EM_muon = Data_LLR_MIP_EM_muon();
  FillHistogram(LLR_MIP_EM_muon_, v_LLR_MIP_EM_muon);

  LLR_MIP_EM_electron_ = new TH1F("LLR_MIP_EM_electron", "", 60, -60, 60);
  auto v_LLR_MIP_EM_electron = Data_LLR_MIP_EM_electron();
  FillHistogram(LLR_MIP_EM_electron_, v_LLR_MIP_EM_electron);

  LLR_MIP_PION_muon_ = new TH1F("LLR_MIP_PION_muon", "", 60, -60, 60);
  auto v_LLR_MIP_PION_muon = Data_LLR_MIP_PION_muon();
  FillHistogram(LLR_MIP_PION_muon_, v_LLR_MIP_PION_muon);

  LLR_MIP_PION_pion_ = new TH1F("LLR_MIP_PION_pion", "", 60, -60, 60);
  auto v_LLR_MIP_PION_pion = Data_LLR_MIP_PION_pion();
  FillHistogram(LLR_MIP_PION_pion_, v_LLR_MIP_PION_pion);

  LLR_EM_HIP_electron_ = new TH1F("LLR_EM_HIP_electron", "", 60, -60, 60);
  auto v_LLR_EM_HIP_electron = Data_LLR_EM_HIP_electron();
  FillHistogram(LLR_EM_HIP_electron_, v_LLR_EM_HIP_electron);

  LLR_EM_HIP_proton_ = new TH1F("LLR_EM_HIP_proton", "", 60, -60, 60);
  auto v_LLR_EM_HIP_proton = Data_LLR_EM_HIP_proton();
  FillHistogram(LLR_EM_HIP_proton_, v_LLR_EM_HIP_proton);
}


EcalPid::~EcalPid()
{
  delete LLR_MIP_EM_muon_;
  delete LLR_MIP_EM_electron_;
  delete LLR_MIP_PION_muon_;
  delete LLR_MIP_PION_pion_;
  delete LLR_EM_HIP_electron_;
  delete LLR_EM_HIP_proton_;
}


void EcalPid::FillHistogram(TH1F* hist, const std::vector<std::vector<double>>& v)
{
  for (unsigned int i=0; i<v.size(); ++i) {
      int n_bin = hist->FindBin(v[i][0]);
      hist->SetBinContent(n_bin, v[i][1]);
  }
}


double EcalPid::LLR_MIP_EM_muon() const
{
  return LLR_MIP_EM_muon_->GetRandom();
}


double EcalPid::LLR_MIP_EM_electron() const
{
  return LLR_MIP_EM_electron_->GetRandom();
}


double EcalPid::LLR_MIP_PION_muon() const
{
  return LLR_MIP_PION_muon_->GetRandom();
}


double EcalPid::LLR_MIP_PION_pion() const
{
  return LLR_MIP_PION_pion_->GetRandom();
}


double EcalPid::LLR_EM_HIP_electron() const
{
  return LLR_EM_HIP_electron_->GetRandom();
}


double EcalPid::LLR_EM_HIP_proton() const
{
  return LLR_EM_HIP_proton_->GetRandom();
}


std::vector<std::vector<double>> EcalPid::Data_LLR_MIP_EM_muon()
{
  std::vector<std::vector<double>> v =
    { {-29.236363636363635, 0.00316883116883115},
      {-27.199999999999996, 0.01231168831168831},
      {-25.163636363636357, 0.02207792207792208},
      {-23.127272727272725, 0.03870129870129871},
      {-21.090909090909086, 0.05075324675324676},
      {-19.199999999999996, 0.06987012987012987},
      {-17.018181818181816, 0.08046753246753247},
      {-15.272727272727266, 0.07838961038961040},
      {-13.090909090909086, 0.08254545454545456},
      {-10.909090909090907, 0.07589610389610390},
      { -9.018181818181816, 0.07174025974025974},
      { -7.272727272727266, 0.06342857142857145},
      { -4.945454545454538, 0.06176623376623377},
      { -2.763636363636365, 0.05823376623376625},
      { -1.018181818181815, 0.04223376623376623},
      {  1.018181818181830, 0.03662337662337664},
      {  2.763636363636379, 0.02914285714285713},
      {  5.090909090909093, 0.02623376623376623},
      {  6.981818181818184, 0.01792207792207793},
      {  8.727272727272734, 0.01314285714285715},
      { 10.763636363636365, 0.01127272727272728},
      { 13.527272727272731, 0.01272727272727274},
      { 14.690909090909088, 0.01064935064935065},
      { 17.163636363636370, 0.01044155844155844},
      { 19.054545454545462, 0.00836363636363636},
      { 21.381818181818190, 0.00815584415584415},
      { 22.836363636363643, 0.00379220779220779},
      { 25.309090909090912, 0.00296103896103897},
      { 27.636363636363640, 0.00109090909090908}};

  return v;
}


std::vector<std::vector<double>> EcalPid::Data_LLR_MIP_EM_electron()
{
  std::vector<std::vector<double>> v =
  {{-18.181818181818173, 0.00109090909090908},
   {-15.272727272727266, 0.00337662337662336},
   {-13.527272727272724, 0.00420779220779221},
   {-11.199999999999996, 0.00670129870129870},
   { -9.163636363636357, 0.00379220779220779},
   { -7.127272727272725, 0.01002597402597403},
   { -5.090909090909079, 0.00753246753246752},
   { -3.054545454545447, 0.01376623376623377},
   { -1.309090909090898, 0.02249350649350649},
   {  0.872727272727274, 0.02415584415584416},
   {  2.909090909090906, 0.02374025974025975},
   {  5.090909090909093, 0.02851948051948052},
   {  6.690909090909102, 0.03932467532467533},
   {  8.872727272727289, 0.03662337662337664},
   { 10.763636363636365, 0.04493506493506494},
   { 13.090909090909093, 0.04722077922077923},
   { 14.690909090909088, 0.06405194805194807},
   { 16.872727272727290, 0.06924675324675325},
   { 19.054545454545462, 0.07402597402597402},
   { 20.945454545454567, 0.06114285714285715},
   { 22.836363636363643, 0.06238961038961040},
   { 24.872727272727290, 0.06114285714285715},
   { 27.200000000000003, 0.05989610389610390},
   { 29.090909090909108, 0.05324675324675325},
   { 30.836363636363630, 0.04223376623376623},
   { 33.163636363636370, 0.04015584415584417},
   { 34.909090909090910, 0.02955844155844156},
   { 36.945454545454550, 0.02477922077922079},
   { 38.981818181818184, 0.01625974025974026},
   { 41.018181818181830, 0.01231168831168831},
   { 42.763636363636380, 0.00628571428571428},
   { 44.945454545454550, 0.00524675324675325},
   { 46.690909090909100, 0.00420779220779221},
   { 49.163636363636370, 0.00316883116883115},
   { 51.054545454545460, 0.00212987012987012},
   { 53.527272727272745, 0.00109090909090908},
   { 55.854545454545460, 0.00067532467532469}};

  return v;
}

std::vector<std::vector<double>> EcalPid::Data_LLR_MIP_PION_muon()
{
  std::vector<std::vector<double>> v =
    {{-17.39280295225072, 0.00142180094786731},
     {-15.18236142592211, 0.00445497630331750},
     {-13.18172451904164, 0.05981042654028434},
     {-11.32045782365172, 0.09620853080568720},
     { -9.27748534177546, 0.10872037914691941},
     { -7.25099750857013, 0.13791469194312794},
     { -5.19154037802296, 0.13374407582938386},
     { -2.95599722758181, 0.11137440758293836},
     { -1.03853286626829, 0.09090047393364928},
     {  0.88417661053144, 0.06511848341232224},
     { 3.276698574452524, 0.04388625592417061},
     { 4.867092520090665, 0.03440758293838861},
     { 6.931420115017886, 0.02530805687203788},
     { 8.836895640934372, 0.01696682464454974},
     {10.895978120375390, 0.01317535545023695},
     {13.109416855553263, 0.01317535545023695},
     {14.692317779068233, 0.01127962085308056},
     {16.271846842627795, 0.01279620853080568},
     {18.803364366933280, 0.01090047393364926},
     {21.022048217597344, 0.00559241706161137},
     {22.921154674709170, 0.00369668246445495},
     {24.978738549725550, 0.00142180094786731},
     {27.034449169211170, 0.00104265402843600}};

  return v;
}


std::vector<std::vector<double>> EcalPid::Data_LLR_MIP_PION_pion()
{
  std::vector<std::vector<double>> v =
    {{-14.864282636794485, 0.002559241706161147},
     {-12.810070621733516, 0.003696682464454953},
     {-11.392390836033940, 0.009004739336492873},
     { -9.506771818743793, 0.020758293838862546},
     { -7.464173987973709, 0.033649289099526050},
     { -5.412209879549664, 0.037061611374407555},
     { -3.359121817807164, 0.039336492890995250},
     { -0.993949384635570, 0.045781990521327004},
     {  0.910027536856290, 0.038957345971563970},
     {  2.965363505235743, 0.038957345971563970},
     {  5.178052938201290, 0.039715639810426530},
     {  7.074162186463852, 0.040853080568720360},
     {  8.810670063503366, 0.043507109004739336},
     { 10.546428638330553, 0.046919431279620840},
     { 12.912350373714474, 0.052606635071090035},
     { 14.966937039881600, 0.053364928909952590},
     { 16.385740778899645, 0.057535545023696680},
     { 18.910514583294300, 0.062464454976303290},
     { 20.811494295936910, 0.058672985781990480},
     { 23.023809077796315, 0.059810426540284345},
     { 24.768184628065114, 0.054502369668246425},
     { 26.514058782758553, 0.047677725118483394},
     { 28.892718655751820, 0.040473933649289084},
     { 30.798943483880635, 0.031374407582938385},
     { 33.023996403349386, 0.019620853080568712},
     { 34.770245209148970, 0.012417061611374403},
     { 36.673847479534670, 0.005971563981042621},
     { 38.891782027986420, 0.001421800947867313}};

  return v;
}

std::vector<std::vector<double>> EcalPid::Data_LLR_EM_HIP_electron()
{
  std::vector<std::vector<double>> v =
    {{-27.277898147128056, 0.00085176616519577},
     {-24.874101820229384, 0.00222356872681872},
     {-22.754295553678595, 0.00174943589618042},
     {-20.774199339804703, 0.00358557852774005},
     {-18.795082402000965, 0.00403604552001601},
     {-17.238033450438415, 0.00726031198103471},
     {-15.255325833710750, 0.01279158965068405},
     {-13.127358933241922, 0.02386475381407632},
     {-11.140734212233596, 0.03493873404086028},
     { -9.147907409447548, 0.05478865998310750},
     { -7.133862958474594, 0.10466155810983399},
     { -5.095989456460956, 0.18825256345912955},
     { -2.839737390800493, 0.18084923636868117},
     { -0.752573659921878, 0.13418591556192090},
     {  0.913827786142448, 0.09214396174294823},
     {  3.007193598798764, 0.05425658665165112},
     {  4.835502021797069, 0.04131300519424352},
     {  7.088163408533589, 0.02882886742642171},
     {  8.775129652071385, 0.01588610203240592},
     { 11.173050322549074, 0.00894385075832693}};

  return v;
}


std::vector<std::vector<double>> EcalPid::Data_LLR_EM_HIP_proton()
{
  std::vector<std::vector<double>> v =
    {{ 20.92207002639968, 0.00380673170691903},
     { 23.18125992027062, 0.00056043153432167},
     { 18.81434149804757, 0.02137086408872246},
     { 17.14304367163242, 0.05648443971127678},
     { 15.03466229256690, 0.07312478833355779},
     { 13.07513087616648, 0.10038783412695501},
     { 11.38196255085097, 0.10455465380550763},
     {  8.98208332823294, 0.10872555380101931},
     {  6.71734420329774, 0.10411969201767596},
     {  4.86585957997219, 0.08426895001203696},
     {  3.01959776235419, 0.07180847808257748},
     {  1.03297304134586, 0.06073449785579346},
     { -0.80741311985111, 0.05658807976203592},
     { -3.35320447692375, 0.05429330950428232},
     { -5.19816059311484, 0.04368040509386772},
     { -7.19000811983073, 0.02521615479090416},
     { -9.17859139297938, 0.01137082328555283},
     {-11.58401984666167, 0.00768956132512377},
     {-13.42440600785867, 0.00354314323136623},
     {-15.26250719155862, 0.00262996829593725}};

  return v;
}
